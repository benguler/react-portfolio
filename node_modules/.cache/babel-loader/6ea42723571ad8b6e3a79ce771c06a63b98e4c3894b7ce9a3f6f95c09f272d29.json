{"ast":null,"code":"var _jsxFileName = \"/home/ben/Desktop/PROG/React-Apps/practice/portfolio/src/components/ToDoTracker/ToDoForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Box, Button, Stack } from '@mui/material/';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToDoForm = _ref => {\n  _s();\n  let {\n    toDo,\n    edit,\n    setNewEdit,\n    addToDo,\n    editToDo\n  } = _ref;\n  const [userInputTitle, setUserInputTitle] = useState(edit ? toDo.title : \"\");\n  const [userInputBody, setUserInputBody] = useState(edit ? toDo.body : \"\");\n  const handleTitleChange = e => {\n    setUserInputTitle(e.currentTarget.value);\n  };\n  const handleBodyChange = e => {\n    setUserInputBody(e.currentTarget.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (userInputTitle !== \"\") {\n      setNewEdit(false);\n      ;\n      if (!edit) {\n        addToDo(userInputTitle, userInputBody);\n      } else if (toDo.id !== -1) {\n        editToDo(toDo, userInputTitle, userInputBody);\n      }\n      setUserInputTitle(\"\");\n      setUserInputBody(\"\");\n    } else {\n      alert(\"Please enter title!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      sx: {\n        '& .MuiTextField-root': {\n          m: 1,\n          width: '25ch'\n        }\n      },\n      noValidate: true,\n      autoComplete: \"off\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-basic\",\n            label: \"Tite\",\n            variant: \"outlined\",\n            value: userInputTitle,\n            onChange: handleTitleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-multiline-flexible\",\n            label: \"Body\",\n            multiline: true,\n            maxRows: 3,\n            value: userInputBody,\n            onChange: handleBodyChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"Submit\",\n            variant: \"outlined\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(ToDoForm, \"KZRbBfnBmwwtYgejvos97Fh6NOQ=\");\n_c = ToDoForm;\nexport default ToDoForm;\nvar _c;\n$RefreshReg$(_c, \"ToDoForm\");","map":{"version":3,"names":["React","useState","TextField","Box","Button","Stack","ToDoForm","toDo","edit","setNewEdit","addToDo","editToDo","userInputTitle","setUserInputTitle","title","userInputBody","setUserInputBody","body","handleTitleChange","e","currentTarget","value","handleBodyChange","handleSubmit","preventDefault","id","alert","m","width"],"sources":["/home/ben/Desktop/PROG/React-Apps/practice/portfolio/src/components/ToDoTracker/ToDoForm.js"],"sourcesContent":["import React, {useState} from 'react';\n\nimport {TextField, Box, Button ,Stack} from '@mui/material/'\n\nconst ToDoForm = ({toDo, edit, setNewEdit, addToDo, editToDo}) => {\n  const [ userInputTitle, setUserInputTitle ] = useState(edit? toDo.title : \"\");\n  const [ userInputBody, setUserInputBody ] = useState(edit? toDo.body : \"\");\n\n  const handleTitleChange = (e) => {\n    setUserInputTitle(e.currentTarget.value);\n\n  }\n\n  const handleBodyChange = (e) => {\n    setUserInputBody(e.currentTarget.value);\n\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if(userInputTitle !== \"\"){\n      setNewEdit(false);;\n\n      if(!edit){\n        addToDo(userInputTitle, userInputBody);\n\n      }else if(toDo.id !== -1){\n        editToDo(toDo, userInputTitle, userInputBody);\n\n      }\n\n      setUserInputTitle(\"\");\n      setUserInputBody(\"\");\n\n    }else{\n      alert(\"Please enter title!\");\n\n    }\n\n\n  }\n\n  return (\n    <div>\n      <Box\n      component=\"form\"\n      sx={{\n        '& .MuiTextField-root': { m: 1, width: '25ch' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={handleSubmit}\n      >\n        <Stack spacing={2}>\n          <Box>\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Tite\"\n              variant=\"outlined\"\n              value={userInputTitle}\n              onChange={handleTitleChange}\n            />\n\n            <TextField\n             id=\"outlined-multiline-flexible\"\n             label=\"Body\"\n             multiline\n             maxRows={3}\n             value={userInputBody}\n             onChange={handleBodyChange}\n            />\n\n          </Box>\n\n          <Box>\n            <Button type=\"Submit\" variant=\"outlined\">Submit</Button>\n\n          </Box>\n          \n        </Stack>\n\n      </Box>\n\n    </div>\n\n  );\n\n};\n\nexport default ToDoForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAErC,SAAQC,SAAS,EAAEC,GAAG,EAAEC,MAAM,EAAEC,KAAK,QAAO,gBAAgB;AAAA;AAE5D,MAAMC,QAAQ,GAAG,QAAiD;EAAA;EAAA,IAAhD;IAACC,IAAI;IAAEC,IAAI;IAAEC,UAAU;IAAEC,OAAO;IAAEC;EAAQ,CAAC;EAC3D,MAAM,CAAEC,cAAc,EAAEC,iBAAiB,CAAE,GAAGZ,QAAQ,CAACO,IAAI,GAAED,IAAI,CAACO,KAAK,GAAG,EAAE,CAAC;EAC7E,MAAM,CAAEC,aAAa,EAAEC,gBAAgB,CAAE,GAAGf,QAAQ,CAACO,IAAI,GAAED,IAAI,CAACU,IAAI,GAAG,EAAE,CAAC;EAE1E,MAAMC,iBAAiB,GAAIC,CAAC,IAAK;IAC/BN,iBAAiB,CAACM,CAAC,CAACC,aAAa,CAACC,KAAK,CAAC;EAE1C,CAAC;EAED,MAAMC,gBAAgB,GAAIH,CAAC,IAAK;IAC9BH,gBAAgB,CAACG,CAAC,CAACC,aAAa,CAACC,KAAK,CAAC;EAEzC,CAAC;EAED,MAAME,YAAY,GAAIJ,CAAC,IAAK;IAC1BA,CAAC,CAACK,cAAc,EAAE;IAElB,IAAGZ,cAAc,KAAK,EAAE,EAAC;MACvBH,UAAU,CAAC,KAAK,CAAC;MAAC;MAElB,IAAG,CAACD,IAAI,EAAC;QACPE,OAAO,CAACE,cAAc,EAAEG,aAAa,CAAC;MAExC,CAAC,MAAK,IAAGR,IAAI,CAACkB,EAAE,KAAK,CAAC,CAAC,EAAC;QACtBd,QAAQ,CAACJ,IAAI,EAAEK,cAAc,EAAEG,aAAa,CAAC;MAE/C;MAEAF,iBAAiB,CAAC,EAAE,CAAC;MACrBG,gBAAgB,CAAC,EAAE,CAAC;IAEtB,CAAC,MAAI;MACHU,KAAK,CAAC,qBAAqB,CAAC;IAE9B;EAGF,CAAC;EAED,oBACE;IAAA,uBACE,QAAC,GAAG;MACJ,SAAS,EAAC,MAAM;MAChB,EAAE,EAAE;QACF,sBAAsB,EAAE;UAAEC,CAAC,EAAE,CAAC;UAAEC,KAAK,EAAE;QAAO;MAChD,CAAE;MACF,UAAU;MACV,YAAY,EAAC,KAAK;MAClB,QAAQ,EAAEL,YAAa;MAAA,uBAErB,QAAC,KAAK;QAAC,OAAO,EAAE,CAAE;QAAA,wBAChB,QAAC,GAAG;UAAA,wBACF,QAAC,SAAS;YACR,EAAE,EAAC,gBAAgB;YACnB,KAAK,EAAC,MAAM;YACZ,OAAO,EAAC,UAAU;YAClB,KAAK,EAAEX,cAAe;YACtB,QAAQ,EAAEM;UAAkB;YAAA;YAAA;YAAA;UAAA,QAC5B,eAEF,QAAC,SAAS;YACT,EAAE,EAAC,6BAA6B;YAChC,KAAK,EAAC,MAAM;YACZ,SAAS;YACT,OAAO,EAAE,CAAE;YACX,KAAK,EAAEH,aAAc;YACrB,QAAQ,EAAEO;UAAiB;YAAA;YAAA;YAAA;UAAA,QAC1B;QAAA;UAAA;UAAA;UAAA;QAAA,QAEE,eAEN,QAAC,GAAG;UAAA,uBACF,QAAC,MAAM;YAAC,IAAI,EAAC,QAAQ;YAAC,OAAO,EAAC,UAAU;YAAA,UAAC;UAAM;YAAA;YAAA;YAAA;UAAA;QAAS;UAAA;UAAA;UAAA;QAAA,QAEpD;MAAA;QAAA;QAAA;QAAA;MAAA;IAEA;MAAA;MAAA;MAAA;IAAA;EAEJ;IAAA;IAAA;IAAA;EAAA,QAEF;AAIV,CAAC;AAAC,GApFIhB,QAAQ;AAAA,KAARA,QAAQ;AAsFd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}